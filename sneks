#!/bin/bash

# Set constants 
SNEKS_CONFIG_FILE="$HOME/.config/sneks/config"

# Set default config
SNEKS_VENVS_DIR="$HOME/.sneks"

show_help() {
  echo "Usage: $0 [command] [options]"
  echo "Commands:"
  echo "  create [env_name]   - Create a new Python virtual environment."
  echo "  use [env_name]      - Activate an existing Python virtual environment."
  echo "  freeze              - Freeze current environment's packages into requirements.txt."
  echo "  thaw                - Install packages from requirements.txt into the current environment."
  echo "  help                - Display this help and exit."
  echo ""
  echo "Example:"
  echo "  $0 create myenv     - Creates a new environment named 'myenv'."
  echo "  $0 use myenv        - Activates the 'myenv' environment."
}

# Check if the operation is valid
case "$1" in
  create|use|freeze|thaw|load|help)
    ;; # If it matches one of the cases, do nothing here
  *)
    echo "Error: Invalid operation. Use 'create', 'use', 'freeze', 'thaw', or 'load'."
    exit 1
    ;;
esac


# Create config directory and file if they don't exist
mkdir -p "$HOME/.config/sneks"
if [ -e "$SNEKS_CONFIG_FILE" ]
then
  echo "Loading config from $SNEKS_CONFIG_FILE"
else 
  echo "Creating config at $SNEKS_CONFIG_FILE"
  touch "$SNEKS_CONFIG_FILE"
fi

# Load config
if [ -r "$SNEKS_CONFIG_FILE" ]
then
  . "$SNEKS_CONFIG_FILE"
else
  echo "Config file is not readable"
  exit 1
fi

# Determine operation
if [[ $1 == "create" || $1 == "use" ]];
then 
  [ -d "$SNEKS_VENVS_DIR/$2" ] || python -m venv "$SNEKS_VENVS_DIR/$2"
fi

if [ $1 == "use" ];
then 
  source "$SNEKS_VENVS_DIR/$2/bin/activate"
fi

if [ $1 == "freeze" ] && [ -n "${VIRTUAL_ENV}" ];
then 
  python -m pip freeze > ./requirements.txt
fi

if [[ $1 == "thaw" || $1 == "load" ]];
then 
  if [ -n "${VIRTUAL_ENV}" ];
  then 
    pip install -r ./requirements.txt
  else
    echo "Virtual environment is not activated."
  fi
fi

if [[ $1 == "help" || -z $1 ]]
then 
  show_help
fi
